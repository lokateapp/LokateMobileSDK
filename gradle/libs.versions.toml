[versions]
agp = "8.2.0"   # should not be upgraded
android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"
androidx-activityCompose = "1.8.2"
androidx-appcompat = "1.6.1"
androidx-constraintlayout = "2.1.4"
androidx-core-ktx = "1.12.0"
androidx-espresso-core = "3.5.1"
androidx-material = "1.11.0"
androidx-test-junit = "1.1.5"
buildkonfigGradlePlugin = "0.15.1"
compose = "1.6.4"
compose-plugin = "1.6.1"
compose-compiler = "1.5.10"
composeMultiplatformMediaPlayer = "1.0.0"
junit = "4.13.2"
kotlin = "1.9.23" # 1.9.22 has a bug with cocoapods https://youtrack.jetbrains.com/issue/KT-65542
androidx-startup = "1.1.1"
kotlinxCoroutinesCore = "1.7.3"
ktlint-rules = "0.0.26"
lifecycleViewmodelKtx = "2.6.2"
loggerVersion = "1.7.26"
ktorVersion = "2.3.5"
permissionsCompose = "0.17.0"
playServicesLocation = "18.0.0"
proximitySdk = "1.0.8"
secretsGradlePlugin = "2.0.1"
sqldelight = "2.0.0"
settingsVer = "1.1.1"
altBeacon = "2.20.3"
lighthouseVer = "1.4.2"
activityKtx = "1.8.2"
gradleKtlint = "12.1.0"
detekt = "1.23.5"
buildkonfig = "0.15.1"
detekt-rules = "0.0.26"
koin = "3.5.6" #do not update other versions causing crashes on iOS side.
koin-compose = "1.1.5"
precompose = "1.6.0"
statelyConcurrency = "2.0.6"

[libraries]
buildkonfig-gradle-plugin = { module = "com.codingfeline.buildkonfig:buildkonfig-gradle-plugin", version.ref = "buildkonfigGradlePlugin" }
compose-multiplatform-media-player = { module = "network.chaintech:compose-multiplatform-media-player", version.ref = "composeMultiplatformMediaPlayer" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
androidx-material = { group = "com.google.android.material", name = "material", version.ref = "androidx-material" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycleViewmodelKtx" }
androidx-startup = { module = "androidx.startup:startup-runtime", version.ref = "androidx-startup" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutinesCore" }
koin-core = {module = "io.insert-koin:koin-core", version.ref = "koin"}
koin-compose = {module = "io.insert-koin:koin-compose", version.ref = "koin-compose"}
#precompose
precompose-core = {module = "moe.tlaster:precompose", version.ref = "precompose"}
precompose-vm = {module = "moe.tlaster:precompose-viewmodel", version.ref = "precompose"}
precompose-koin = {module = "moe.tlaster:precompose-koin", version.ref = "precompose"}

#ktor common
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktorVersion" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktorVersion" }
ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktorVersion" }

#ktor android
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktorVersion" }

#ktor ios
ktor-client-ios = { module = "io.ktor:ktor-client-darwin", version.ref = "ktorVersion" }

permissions-compose = { module = "dev.icerock.moko:permissions-compose", version.ref = "permissionsCompose" }
play-services-location = { module = "com.google.android.gms:play-services-location", version.ref = "playServicesLocation" }
proximity-sdk = { module = "com.estimote:proximity-sdk", version.ref = "proximitySdk" }
secrets-gradle-plugin = { module = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin:secrets-gradle-plugin", version.ref = "secretsGradlePlugin" }
slf4j-logger = { module = "org.slf4j:slf4j-simple", version.ref = "loggerVersion" }

#multiplatform shared pref
russhwolf-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "settingsVer" }
russhwolf-settings-no-arg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "settingsVer" }

#multiplatform logging
lighthouse-log = { module = "org.lighthousegames:logging", version.ref = "lighthouseVer" }

#sqldelight-common
#sqldelight android
sqldelight-driver-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
#sqldelight native
sqldelight-driver-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }

#altbeacon-android
altbeacon-android = { module = "org.altbeacon:android-beacon-library", version.ref = "altBeacon" }
androidx-activity-ktx = { group = "androidx.activity", name = "activity-ktx", version.ref = "activityKtx" }

#ktlint-rules
ktlint-rules-twitter = { module = "com.twitter.compose.rules:ktlint", version.ref = "ktlint-rules" }

detekt-rules-twitter = { module = "com.twitter.compose.rules:detekt", version.ref = "detekt-rules" }
stately-common = { module = "co.touchlab:stately-common", version.ref = "statelyConcurrency" }
stately-concurrency = { module = "co.touchlab:stately-concurrency", version.ref = "statelyConcurrency" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
gradleKtlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "gradleKtlint" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
buildkonfig = { id = "com.codingfeline.buildkonfig", version.ref = "buildkonfig" }